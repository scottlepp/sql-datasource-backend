// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backend.proto
// Protobuf Java Version: 4.28.3

package com.grafana.backend;

public interface ConversionResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pluginv2.ConversionResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * uid is an identifier for the individual request/response.
   * This should be copied over from the corresponding `request.uid`.
   * </pre>
   *
   * <code>string uid = 1;</code>
   * @return The uid.
   */
  java.lang.String getUid();
  /**
   * <pre>
   * uid is an identifier for the individual request/response.
   * This should be copied over from the corresponding `request.uid`.
   * </pre>
   *
   * <code>string uid = 1;</code>
   * @return The bytes for uid.
   */
  com.google.protobuf.ByteString
      getUidBytes();

  /**
   * <pre>
   * result contains extra details into why an admission request was denied.
   * </pre>
   *
   * <code>.pluginv2.StatusResult result = 2;</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <pre>
   * result contains extra details into why an admission request was denied.
   * </pre>
   *
   * <code>.pluginv2.StatusResult result = 2;</code>
   * @return The result.
   */
  com.grafana.backend.StatusResult getResult();
  /**
   * <pre>
   * result contains extra details into why an admission request was denied.
   * </pre>
   *
   * <code>.pluginv2.StatusResult result = 2;</code>
   */
  com.grafana.backend.StatusResultOrBuilder getResultOrBuilder();

  /**
   * <pre>
   * objects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
   * +listType=atomic
   * </pre>
   *
   * <code>repeated .pluginv2.RawObject objects = 3;</code>
   */
  java.util.List<com.grafana.backend.RawObject> 
      getObjectsList();
  /**
   * <pre>
   * objects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
   * +listType=atomic
   * </pre>
   *
   * <code>repeated .pluginv2.RawObject objects = 3;</code>
   */
  com.grafana.backend.RawObject getObjects(int index);
  /**
   * <pre>
   * objects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
   * +listType=atomic
   * </pre>
   *
   * <code>repeated .pluginv2.RawObject objects = 3;</code>
   */
  int getObjectsCount();
  /**
   * <pre>
   * objects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
   * +listType=atomic
   * </pre>
   *
   * <code>repeated .pluginv2.RawObject objects = 3;</code>
   */
  java.util.List<? extends com.grafana.backend.RawObjectOrBuilder> 
      getObjectsOrBuilderList();
  /**
   * <pre>
   * objects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
   * +listType=atomic
   * </pre>
   *
   * <code>repeated .pluginv2.RawObject objects = 3;</code>
   */
  com.grafana.backend.RawObjectOrBuilder getObjectsOrBuilder(
      int index);
}
