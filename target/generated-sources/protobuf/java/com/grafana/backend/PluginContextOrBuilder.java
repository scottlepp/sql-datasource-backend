// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backend.proto
// Protobuf Java Version: 4.28.3

package com.grafana.backend;

public interface PluginContextOrBuilder extends
    // @@protoc_insertion_point(interface_extends:pluginv2.PluginContext)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The Grafana organization id the request originates from.
   * </pre>
   *
   * <code>int64 orgId = 1;</code>
   * @return The orgId.
   */
  long getOrgId();

  /**
   * <pre>
   * The unique identifier of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginId = 2;</code>
   * @return The pluginId.
   */
  java.lang.String getPluginId();
  /**
   * <pre>
   * The unique identifier of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginId = 2;</code>
   * @return The bytes for pluginId.
   */
  com.google.protobuf.ByteString
      getPluginIdBytes();

  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   * @return Whether the user field is set.
   */
  boolean hasUser();
  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   * @return The user.
   */
  com.grafana.backend.User getUser();
  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   */
  com.grafana.backend.UserOrBuilder getUserOrBuilder();

  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   * @return Whether the appInstanceSettings field is set.
   */
  boolean hasAppInstanceSettings();
  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   * @return The appInstanceSettings.
   */
  com.grafana.backend.AppInstanceSettings getAppInstanceSettings();
  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   */
  com.grafana.backend.AppInstanceSettingsOrBuilder getAppInstanceSettingsOrBuilder();

  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   * @return Whether the dataSourceInstanceSettings field is set.
   */
  boolean hasDataSourceInstanceSettings();
  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   * @return The dataSourceInstanceSettings.
   */
  com.grafana.backend.DataSourceInstanceSettings getDataSourceInstanceSettings();
  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   */
  com.grafana.backend.DataSourceInstanceSettingsOrBuilder getDataSourceInstanceSettingsOrBuilder();

  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  int getGrafanaConfigCount();
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  boolean containsGrafanaConfig(
      java.lang.String key);
  /**
   * Use {@link #getGrafanaConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getGrafanaConfig();
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getGrafanaConfigMap();
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  /* nullable */
java.lang.String getGrafanaConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  java.lang.String getGrafanaConfigOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The version of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginVersion = 7;</code>
   * @return The pluginVersion.
   */
  java.lang.String getPluginVersion();
  /**
   * <pre>
   * The version of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginVersion = 7;</code>
   * @return The bytes for pluginVersion.
   */
  com.google.protobuf.ByteString
      getPluginVersionBytes();

  /**
   * <pre>
   * The user agent of the Grafana server that initiated the gRPC request.
   * </pre>
   *
   * <code>string userAgent = 8;</code>
   * @return The userAgent.
   */
  java.lang.String getUserAgent();
  /**
   * <pre>
   * The user agent of the Grafana server that initiated the gRPC request.
   * </pre>
   *
   * <code>string userAgent = 8;</code>
   * @return The bytes for userAgent.
   */
  com.google.protobuf.ByteString
      getUserAgentBytes();

  /**
   * <pre>
   * The API version that initiated a request
   * </pre>
   *
   * <code>string apiVersion = 9;</code>
   * @return The apiVersion.
   */
  java.lang.String getApiVersion();
  /**
   * <pre>
   * The API version that initiated a request
   * </pre>
   *
   * <code>string apiVersion = 9;</code>
   * @return The bytes for apiVersion.
   */
  com.google.protobuf.ByteString
      getApiVersionBytes();
}
