// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backend.proto
// Protobuf Java Version: 4.28.3

package com.grafana.backend;

/**
 * Protobuf type {@code pluginv2.PluginContext}
 */
public final class PluginContext extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:pluginv2.PluginContext)
    PluginContextOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      PluginContext.class.getName());
  }
  // Use PluginContext.newBuilder() to construct.
  private PluginContext(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PluginContext() {
    pluginId_ = "";
    pluginVersion_ = "";
    userAgent_ = "";
    apiVersion_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 6:
        return internalGetGrafanaConfig();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.grafana.backend.PluginContext.class, com.grafana.backend.PluginContext.Builder.class);
  }

  private int bitField0_;
  public static final int ORGID_FIELD_NUMBER = 1;
  private long orgId_ = 0L;
  /**
   * <pre>
   * The Grafana organization id the request originates from.
   * </pre>
   *
   * <code>int64 orgId = 1;</code>
   * @return The orgId.
   */
  @java.lang.Override
  public long getOrgId() {
    return orgId_;
  }

  public static final int PLUGINID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object pluginId_ = "";
  /**
   * <pre>
   * The unique identifier of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginId = 2;</code>
   * @return The pluginId.
   */
  @java.lang.Override
  public java.lang.String getPluginId() {
    java.lang.Object ref = pluginId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pluginId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The unique identifier of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginId = 2;</code>
   * @return The bytes for pluginId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPluginIdBytes() {
    java.lang.Object ref = pluginId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pluginId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_FIELD_NUMBER = 3;
  private com.grafana.backend.User user_;
  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   * @return Whether the user field is set.
   */
  @java.lang.Override
  public boolean hasUser() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   * @return The user.
   */
  @java.lang.Override
  public com.grafana.backend.User getUser() {
    return user_ == null ? com.grafana.backend.User.getDefaultInstance() : user_;
  }
  /**
   * <pre>
   * The Grafana user the request originates from.
   *
   * Will not be provided if Grafana backend initiated the request.
   * </pre>
   *
   * <code>.pluginv2.User user = 3;</code>
   */
  @java.lang.Override
  public com.grafana.backend.UserOrBuilder getUserOrBuilder() {
    return user_ == null ? com.grafana.backend.User.getDefaultInstance() : user_;
  }

  public static final int APPINSTANCESETTINGS_FIELD_NUMBER = 4;
  private com.grafana.backend.AppInstanceSettings appInstanceSettings_;
  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   * @return Whether the appInstanceSettings field is set.
   */
  @java.lang.Override
  public boolean hasAppInstanceSettings() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   * @return The appInstanceSettings.
   */
  @java.lang.Override
  public com.grafana.backend.AppInstanceSettings getAppInstanceSettings() {
    return appInstanceSettings_ == null ? com.grafana.backend.AppInstanceSettings.getDefaultInstance() : appInstanceSettings_;
  }
  /**
   * <pre>
   * App plugin instance settings is the configured app instance settings.
   * In Grafana an app instance is an enabled app plugin in a
   * Grafana organization.
   *
   * Will only be set if request targeting an app instance.
   * </pre>
   *
   * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
   */
  @java.lang.Override
  public com.grafana.backend.AppInstanceSettingsOrBuilder getAppInstanceSettingsOrBuilder() {
    return appInstanceSettings_ == null ? com.grafana.backend.AppInstanceSettings.getDefaultInstance() : appInstanceSettings_;
  }

  public static final int DATASOURCEINSTANCESETTINGS_FIELD_NUMBER = 5;
  private com.grafana.backend.DataSourceInstanceSettings dataSourceInstanceSettings_;
  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   * @return Whether the dataSourceInstanceSettings field is set.
   */
  @java.lang.Override
  public boolean hasDataSourceInstanceSettings() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   * @return The dataSourceInstanceSettings.
   */
  @java.lang.Override
  public com.grafana.backend.DataSourceInstanceSettings getDataSourceInstanceSettings() {
    return dataSourceInstanceSettings_ == null ? com.grafana.backend.DataSourceInstanceSettings.getDefaultInstance() : dataSourceInstanceSettings_;
  }
  /**
   * <pre>
   * Data source instance settings is the configured data source instance
   * settings. In Grafana a data source instance is a created data source
   * in a Grafana organization.
   *
   * Will only be set if request targeting a data source instance.
   * </pre>
   *
   * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
   */
  @java.lang.Override
  public com.grafana.backend.DataSourceInstanceSettingsOrBuilder getDataSourceInstanceSettingsOrBuilder() {
    return dataSourceInstanceSettings_ == null ? com.grafana.backend.DataSourceInstanceSettings.getDefaultInstance() : dataSourceInstanceSettings_;
  }

  public static final int GRAFANACONFIG_FIELD_NUMBER = 6;
  private static final class GrafanaConfigDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_GrafanaConfigEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> grafanaConfig_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetGrafanaConfig() {
    if (grafanaConfig_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          GrafanaConfigDefaultEntryHolder.defaultEntry);
    }
    return grafanaConfig_;
  }
  public int getGrafanaConfigCount() {
    return internalGetGrafanaConfig().getMap().size();
  }
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  @java.lang.Override
  public boolean containsGrafanaConfig(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetGrafanaConfig().getMap().containsKey(key);
  }
  /**
   * Use {@link #getGrafanaConfigMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getGrafanaConfig() {
    return getGrafanaConfigMap();
  }
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getGrafanaConfigMap() {
    return internalGetGrafanaConfig().getMap();
  }
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getGrafanaConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetGrafanaConfig().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The grafana configuration as a map of key/value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
   */
  @java.lang.Override
  public java.lang.String getGrafanaConfigOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetGrafanaConfig().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int PLUGINVERSION_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object pluginVersion_ = "";
  /**
   * <pre>
   * The version of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginVersion = 7;</code>
   * @return The pluginVersion.
   */
  @java.lang.Override
  public java.lang.String getPluginVersion() {
    java.lang.Object ref = pluginVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pluginVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The version of the plugin the request is targeted for.
   * </pre>
   *
   * <code>string pluginVersion = 7;</code>
   * @return The bytes for pluginVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPluginVersionBytes() {
    java.lang.Object ref = pluginVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pluginVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERAGENT_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object userAgent_ = "";
  /**
   * <pre>
   * The user agent of the Grafana server that initiated the gRPC request.
   * </pre>
   *
   * <code>string userAgent = 8;</code>
   * @return The userAgent.
   */
  @java.lang.Override
  public java.lang.String getUserAgent() {
    java.lang.Object ref = userAgent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userAgent_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The user agent of the Grafana server that initiated the gRPC request.
   * </pre>
   *
   * <code>string userAgent = 8;</code>
   * @return The bytes for userAgent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserAgentBytes() {
    java.lang.Object ref = userAgent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userAgent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APIVERSION_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object apiVersion_ = "";
  /**
   * <pre>
   * The API version that initiated a request
   * </pre>
   *
   * <code>string apiVersion = 9;</code>
   * @return The apiVersion.
   */
  @java.lang.Override
  public java.lang.String getApiVersion() {
    java.lang.Object ref = apiVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      apiVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The API version that initiated a request
   * </pre>
   *
   * <code>string apiVersion = 9;</code>
   * @return The bytes for apiVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getApiVersionBytes() {
    java.lang.Object ref = apiVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      apiVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (orgId_ != 0L) {
      output.writeInt64(1, orgId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pluginId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, pluginId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getUser());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getAppInstanceSettings());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(5, getDataSourceInstanceSettings());
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetGrafanaConfig(),
        GrafanaConfigDefaultEntryHolder.defaultEntry,
        6);
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pluginVersion_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, pluginVersion_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userAgent_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 8, userAgent_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(apiVersion_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 9, apiVersion_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (orgId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, orgId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pluginId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, pluginId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getUser());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAppInstanceSettings());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDataSourceInstanceSettings());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetGrafanaConfig().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      grafanaConfig__ = GrafanaConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, grafanaConfig__);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(pluginVersion_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, pluginVersion_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(userAgent_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(8, userAgent_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(apiVersion_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(9, apiVersion_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.grafana.backend.PluginContext)) {
      return super.equals(obj);
    }
    com.grafana.backend.PluginContext other = (com.grafana.backend.PluginContext) obj;

    if (getOrgId()
        != other.getOrgId()) return false;
    if (!getPluginId()
        .equals(other.getPluginId())) return false;
    if (hasUser() != other.hasUser()) return false;
    if (hasUser()) {
      if (!getUser()
          .equals(other.getUser())) return false;
    }
    if (hasAppInstanceSettings() != other.hasAppInstanceSettings()) return false;
    if (hasAppInstanceSettings()) {
      if (!getAppInstanceSettings()
          .equals(other.getAppInstanceSettings())) return false;
    }
    if (hasDataSourceInstanceSettings() != other.hasDataSourceInstanceSettings()) return false;
    if (hasDataSourceInstanceSettings()) {
      if (!getDataSourceInstanceSettings()
          .equals(other.getDataSourceInstanceSettings())) return false;
    }
    if (!internalGetGrafanaConfig().equals(
        other.internalGetGrafanaConfig())) return false;
    if (!getPluginVersion()
        .equals(other.getPluginVersion())) return false;
    if (!getUserAgent()
        .equals(other.getUserAgent())) return false;
    if (!getApiVersion()
        .equals(other.getApiVersion())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ORGID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOrgId());
    hash = (37 * hash) + PLUGINID_FIELD_NUMBER;
    hash = (53 * hash) + getPluginId().hashCode();
    if (hasUser()) {
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
    }
    if (hasAppInstanceSettings()) {
      hash = (37 * hash) + APPINSTANCESETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getAppInstanceSettings().hashCode();
    }
    if (hasDataSourceInstanceSettings()) {
      hash = (37 * hash) + DATASOURCEINSTANCESETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getDataSourceInstanceSettings().hashCode();
    }
    if (!internalGetGrafanaConfig().getMap().isEmpty()) {
      hash = (37 * hash) + GRAFANACONFIG_FIELD_NUMBER;
      hash = (53 * hash) + internalGetGrafanaConfig().hashCode();
    }
    hash = (37 * hash) + PLUGINVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getPluginVersion().hashCode();
    hash = (37 * hash) + USERAGENT_FIELD_NUMBER;
    hash = (53 * hash) + getUserAgent().hashCode();
    hash = (37 * hash) + APIVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getApiVersion().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.grafana.backend.PluginContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.PluginContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.PluginContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.grafana.backend.PluginContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.grafana.backend.PluginContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.grafana.backend.PluginContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.grafana.backend.PluginContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pluginv2.PluginContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pluginv2.PluginContext)
      com.grafana.backend.PluginContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 6:
          return internalGetGrafanaConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableGrafanaConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.grafana.backend.PluginContext.class, com.grafana.backend.PluginContext.Builder.class);
    }

    // Construct using com.grafana.backend.PluginContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getUserFieldBuilder();
        getAppInstanceSettingsFieldBuilder();
        getDataSourceInstanceSettingsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      orgId_ = 0L;
      pluginId_ = "";
      user_ = null;
      if (userBuilder_ != null) {
        userBuilder_.dispose();
        userBuilder_ = null;
      }
      appInstanceSettings_ = null;
      if (appInstanceSettingsBuilder_ != null) {
        appInstanceSettingsBuilder_.dispose();
        appInstanceSettingsBuilder_ = null;
      }
      dataSourceInstanceSettings_ = null;
      if (dataSourceInstanceSettingsBuilder_ != null) {
        dataSourceInstanceSettingsBuilder_.dispose();
        dataSourceInstanceSettingsBuilder_ = null;
      }
      internalGetMutableGrafanaConfig().clear();
      pluginVersion_ = "";
      userAgent_ = "";
      apiVersion_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_PluginContext_descriptor;
    }

    @java.lang.Override
    public com.grafana.backend.PluginContext getDefaultInstanceForType() {
      return com.grafana.backend.PluginContext.getDefaultInstance();
    }

    @java.lang.Override
    public com.grafana.backend.PluginContext build() {
      com.grafana.backend.PluginContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.grafana.backend.PluginContext buildPartial() {
      com.grafana.backend.PluginContext result = new com.grafana.backend.PluginContext(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.grafana.backend.PluginContext result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.orgId_ = orgId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.pluginId_ = pluginId_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.user_ = userBuilder_ == null
            ? user_
            : userBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.appInstanceSettings_ = appInstanceSettingsBuilder_ == null
            ? appInstanceSettings_
            : appInstanceSettingsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.dataSourceInstanceSettings_ = dataSourceInstanceSettingsBuilder_ == null
            ? dataSourceInstanceSettings_
            : dataSourceInstanceSettingsBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.grafanaConfig_ = internalGetGrafanaConfig();
        result.grafanaConfig_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.pluginVersion_ = pluginVersion_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.userAgent_ = userAgent_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.apiVersion_ = apiVersion_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.grafana.backend.PluginContext) {
        return mergeFrom((com.grafana.backend.PluginContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.grafana.backend.PluginContext other) {
      if (other == com.grafana.backend.PluginContext.getDefaultInstance()) return this;
      if (other.getOrgId() != 0L) {
        setOrgId(other.getOrgId());
      }
      if (!other.getPluginId().isEmpty()) {
        pluginId_ = other.pluginId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasUser()) {
        mergeUser(other.getUser());
      }
      if (other.hasAppInstanceSettings()) {
        mergeAppInstanceSettings(other.getAppInstanceSettings());
      }
      if (other.hasDataSourceInstanceSettings()) {
        mergeDataSourceInstanceSettings(other.getDataSourceInstanceSettings());
      }
      internalGetMutableGrafanaConfig().mergeFrom(
          other.internalGetGrafanaConfig());
      bitField0_ |= 0x00000020;
      if (!other.getPluginVersion().isEmpty()) {
        pluginVersion_ = other.pluginVersion_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (!other.getUserAgent().isEmpty()) {
        userAgent_ = other.userAgent_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getApiVersion().isEmpty()) {
        apiVersion_ = other.apiVersion_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              orgId_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              pluginId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getUserFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getAppInstanceSettingsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getDataSourceInstanceSettingsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              grafanaConfig__ = input.readMessage(
                  GrafanaConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableGrafanaConfig().getMutableMap().put(
                  grafanaConfig__.getKey(), grafanaConfig__.getValue());
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              pluginVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              userAgent_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              apiVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long orgId_ ;
    /**
     * <pre>
     * The Grafana organization id the request originates from.
     * </pre>
     *
     * <code>int64 orgId = 1;</code>
     * @return The orgId.
     */
    @java.lang.Override
    public long getOrgId() {
      return orgId_;
    }
    /**
     * <pre>
     * The Grafana organization id the request originates from.
     * </pre>
     *
     * <code>int64 orgId = 1;</code>
     * @param value The orgId to set.
     * @return This builder for chaining.
     */
    public Builder setOrgId(long value) {

      orgId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Grafana organization id the request originates from.
     * </pre>
     *
     * <code>int64 orgId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrgId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      orgId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object pluginId_ = "";
    /**
     * <pre>
     * The unique identifier of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginId = 2;</code>
     * @return The pluginId.
     */
    public java.lang.String getPluginId() {
      java.lang.Object ref = pluginId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pluginId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The unique identifier of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginId = 2;</code>
     * @return The bytes for pluginId.
     */
    public com.google.protobuf.ByteString
        getPluginIdBytes() {
      java.lang.Object ref = pluginId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pluginId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The unique identifier of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginId = 2;</code>
     * @param value The pluginId to set.
     * @return This builder for chaining.
     */
    public Builder setPluginId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      pluginId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique identifier of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPluginId() {
      pluginId_ = getDefaultInstance().getPluginId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique identifier of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginId = 2;</code>
     * @param value The bytes for pluginId to set.
     * @return This builder for chaining.
     */
    public Builder setPluginIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      pluginId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.grafana.backend.User user_;
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.User, com.grafana.backend.User.Builder, com.grafana.backend.UserOrBuilder> userBuilder_;
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     * @return Whether the user field is set.
     */
    public boolean hasUser() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     * @return The user.
     */
    public com.grafana.backend.User getUser() {
      if (userBuilder_ == null) {
        return user_ == null ? com.grafana.backend.User.getDefaultInstance() : user_;
      } else {
        return userBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public Builder setUser(com.grafana.backend.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        user_ = value;
      } else {
        userBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public Builder setUser(
        com.grafana.backend.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        user_ = builderForValue.build();
      } else {
        userBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public Builder mergeUser(com.grafana.backend.User value) {
      if (userBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          user_ != null &&
          user_ != com.grafana.backend.User.getDefaultInstance()) {
          getUserBuilder().mergeFrom(value);
        } else {
          user_ = value;
        }
      } else {
        userBuilder_.mergeFrom(value);
      }
      if (user_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public Builder clearUser() {
      bitField0_ = (bitField0_ & ~0x00000004);
      user_ = null;
      if (userBuilder_ != null) {
        userBuilder_.dispose();
        userBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public com.grafana.backend.User.Builder getUserBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getUserFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    public com.grafana.backend.UserOrBuilder getUserOrBuilder() {
      if (userBuilder_ != null) {
        return userBuilder_.getMessageOrBuilder();
      } else {
        return user_ == null ?
            com.grafana.backend.User.getDefaultInstance() : user_;
      }
    }
    /**
     * <pre>
     * The Grafana user the request originates from.
     *
     * Will not be provided if Grafana backend initiated the request.
     * </pre>
     *
     * <code>.pluginv2.User user = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.User, com.grafana.backend.User.Builder, com.grafana.backend.UserOrBuilder> 
        getUserFieldBuilder() {
      if (userBuilder_ == null) {
        userBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.grafana.backend.User, com.grafana.backend.User.Builder, com.grafana.backend.UserOrBuilder>(
                getUser(),
                getParentForChildren(),
                isClean());
        user_ = null;
      }
      return userBuilder_;
    }

    private com.grafana.backend.AppInstanceSettings appInstanceSettings_;
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.AppInstanceSettings, com.grafana.backend.AppInstanceSettings.Builder, com.grafana.backend.AppInstanceSettingsOrBuilder> appInstanceSettingsBuilder_;
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     * @return Whether the appInstanceSettings field is set.
     */
    public boolean hasAppInstanceSettings() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     * @return The appInstanceSettings.
     */
    public com.grafana.backend.AppInstanceSettings getAppInstanceSettings() {
      if (appInstanceSettingsBuilder_ == null) {
        return appInstanceSettings_ == null ? com.grafana.backend.AppInstanceSettings.getDefaultInstance() : appInstanceSettings_;
      } else {
        return appInstanceSettingsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public Builder setAppInstanceSettings(com.grafana.backend.AppInstanceSettings value) {
      if (appInstanceSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        appInstanceSettings_ = value;
      } else {
        appInstanceSettingsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public Builder setAppInstanceSettings(
        com.grafana.backend.AppInstanceSettings.Builder builderForValue) {
      if (appInstanceSettingsBuilder_ == null) {
        appInstanceSettings_ = builderForValue.build();
      } else {
        appInstanceSettingsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public Builder mergeAppInstanceSettings(com.grafana.backend.AppInstanceSettings value) {
      if (appInstanceSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          appInstanceSettings_ != null &&
          appInstanceSettings_ != com.grafana.backend.AppInstanceSettings.getDefaultInstance()) {
          getAppInstanceSettingsBuilder().mergeFrom(value);
        } else {
          appInstanceSettings_ = value;
        }
      } else {
        appInstanceSettingsBuilder_.mergeFrom(value);
      }
      if (appInstanceSettings_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public Builder clearAppInstanceSettings() {
      bitField0_ = (bitField0_ & ~0x00000008);
      appInstanceSettings_ = null;
      if (appInstanceSettingsBuilder_ != null) {
        appInstanceSettingsBuilder_.dispose();
        appInstanceSettingsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public com.grafana.backend.AppInstanceSettings.Builder getAppInstanceSettingsBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getAppInstanceSettingsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    public com.grafana.backend.AppInstanceSettingsOrBuilder getAppInstanceSettingsOrBuilder() {
      if (appInstanceSettingsBuilder_ != null) {
        return appInstanceSettingsBuilder_.getMessageOrBuilder();
      } else {
        return appInstanceSettings_ == null ?
            com.grafana.backend.AppInstanceSettings.getDefaultInstance() : appInstanceSettings_;
      }
    }
    /**
     * <pre>
     * App plugin instance settings is the configured app instance settings.
     * In Grafana an app instance is an enabled app plugin in a
     * Grafana organization.
     *
     * Will only be set if request targeting an app instance.
     * </pre>
     *
     * <code>.pluginv2.AppInstanceSettings appInstanceSettings = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.AppInstanceSettings, com.grafana.backend.AppInstanceSettings.Builder, com.grafana.backend.AppInstanceSettingsOrBuilder> 
        getAppInstanceSettingsFieldBuilder() {
      if (appInstanceSettingsBuilder_ == null) {
        appInstanceSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.grafana.backend.AppInstanceSettings, com.grafana.backend.AppInstanceSettings.Builder, com.grafana.backend.AppInstanceSettingsOrBuilder>(
                getAppInstanceSettings(),
                getParentForChildren(),
                isClean());
        appInstanceSettings_ = null;
      }
      return appInstanceSettingsBuilder_;
    }

    private com.grafana.backend.DataSourceInstanceSettings dataSourceInstanceSettings_;
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.DataSourceInstanceSettings, com.grafana.backend.DataSourceInstanceSettings.Builder, com.grafana.backend.DataSourceInstanceSettingsOrBuilder> dataSourceInstanceSettingsBuilder_;
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     * @return Whether the dataSourceInstanceSettings field is set.
     */
    public boolean hasDataSourceInstanceSettings() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     * @return The dataSourceInstanceSettings.
     */
    public com.grafana.backend.DataSourceInstanceSettings getDataSourceInstanceSettings() {
      if (dataSourceInstanceSettingsBuilder_ == null) {
        return dataSourceInstanceSettings_ == null ? com.grafana.backend.DataSourceInstanceSettings.getDefaultInstance() : dataSourceInstanceSettings_;
      } else {
        return dataSourceInstanceSettingsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public Builder setDataSourceInstanceSettings(com.grafana.backend.DataSourceInstanceSettings value) {
      if (dataSourceInstanceSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataSourceInstanceSettings_ = value;
      } else {
        dataSourceInstanceSettingsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public Builder setDataSourceInstanceSettings(
        com.grafana.backend.DataSourceInstanceSettings.Builder builderForValue) {
      if (dataSourceInstanceSettingsBuilder_ == null) {
        dataSourceInstanceSettings_ = builderForValue.build();
      } else {
        dataSourceInstanceSettingsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public Builder mergeDataSourceInstanceSettings(com.grafana.backend.DataSourceInstanceSettings value) {
      if (dataSourceInstanceSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          dataSourceInstanceSettings_ != null &&
          dataSourceInstanceSettings_ != com.grafana.backend.DataSourceInstanceSettings.getDefaultInstance()) {
          getDataSourceInstanceSettingsBuilder().mergeFrom(value);
        } else {
          dataSourceInstanceSettings_ = value;
        }
      } else {
        dataSourceInstanceSettingsBuilder_.mergeFrom(value);
      }
      if (dataSourceInstanceSettings_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public Builder clearDataSourceInstanceSettings() {
      bitField0_ = (bitField0_ & ~0x00000010);
      dataSourceInstanceSettings_ = null;
      if (dataSourceInstanceSettingsBuilder_ != null) {
        dataSourceInstanceSettingsBuilder_.dispose();
        dataSourceInstanceSettingsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public com.grafana.backend.DataSourceInstanceSettings.Builder getDataSourceInstanceSettingsBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getDataSourceInstanceSettingsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    public com.grafana.backend.DataSourceInstanceSettingsOrBuilder getDataSourceInstanceSettingsOrBuilder() {
      if (dataSourceInstanceSettingsBuilder_ != null) {
        return dataSourceInstanceSettingsBuilder_.getMessageOrBuilder();
      } else {
        return dataSourceInstanceSettings_ == null ?
            com.grafana.backend.DataSourceInstanceSettings.getDefaultInstance() : dataSourceInstanceSettings_;
      }
    }
    /**
     * <pre>
     * Data source instance settings is the configured data source instance
     * settings. In Grafana a data source instance is a created data source
     * in a Grafana organization.
     *
     * Will only be set if request targeting a data source instance.
     * </pre>
     *
     * <code>.pluginv2.DataSourceInstanceSettings dataSourceInstanceSettings = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.DataSourceInstanceSettings, com.grafana.backend.DataSourceInstanceSettings.Builder, com.grafana.backend.DataSourceInstanceSettingsOrBuilder> 
        getDataSourceInstanceSettingsFieldBuilder() {
      if (dataSourceInstanceSettingsBuilder_ == null) {
        dataSourceInstanceSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.grafana.backend.DataSourceInstanceSettings, com.grafana.backend.DataSourceInstanceSettings.Builder, com.grafana.backend.DataSourceInstanceSettingsOrBuilder>(
                getDataSourceInstanceSettings(),
                getParentForChildren(),
                isClean());
        dataSourceInstanceSettings_ = null;
      }
      return dataSourceInstanceSettingsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> grafanaConfig_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetGrafanaConfig() {
      if (grafanaConfig_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GrafanaConfigDefaultEntryHolder.defaultEntry);
      }
      return grafanaConfig_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableGrafanaConfig() {
      if (grafanaConfig_ == null) {
        grafanaConfig_ = com.google.protobuf.MapField.newMapField(
            GrafanaConfigDefaultEntryHolder.defaultEntry);
      }
      if (!grafanaConfig_.isMutable()) {
        grafanaConfig_ = grafanaConfig_.copy();
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return grafanaConfig_;
    }
    public int getGrafanaConfigCount() {
      return internalGetGrafanaConfig().getMap().size();
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    @java.lang.Override
    public boolean containsGrafanaConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetGrafanaConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGrafanaConfigMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getGrafanaConfig() {
      return getGrafanaConfigMap();
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getGrafanaConfigMap() {
      return internalGetGrafanaConfig().getMap();
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getGrafanaConfigOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGrafanaConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    @java.lang.Override
    public java.lang.String getGrafanaConfigOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGrafanaConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearGrafanaConfig() {
      bitField0_ = (bitField0_ & ~0x00000020);
      internalGetMutableGrafanaConfig().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    public Builder removeGrafanaConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableGrafanaConfig().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableGrafanaConfig() {
      bitField0_ |= 0x00000020;
      return internalGetMutableGrafanaConfig().getMutableMap();
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    public Builder putGrafanaConfig(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableGrafanaConfig().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * The grafana configuration as a map of key/value pairs.
     * </pre>
     *
     * <code>map&lt;string, string&gt; grafanaConfig = 6;</code>
     */
    public Builder putAllGrafanaConfig(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableGrafanaConfig().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000020;
      return this;
    }

    private java.lang.Object pluginVersion_ = "";
    /**
     * <pre>
     * The version of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginVersion = 7;</code>
     * @return The pluginVersion.
     */
    public java.lang.String getPluginVersion() {
      java.lang.Object ref = pluginVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pluginVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The version of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginVersion = 7;</code>
     * @return The bytes for pluginVersion.
     */
    public com.google.protobuf.ByteString
        getPluginVersionBytes() {
      java.lang.Object ref = pluginVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pluginVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The version of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginVersion = 7;</code>
     * @param value The pluginVersion to set.
     * @return This builder for chaining.
     */
    public Builder setPluginVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      pluginVersion_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The version of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginVersion = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearPluginVersion() {
      pluginVersion_ = getDefaultInstance().getPluginVersion();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The version of the plugin the request is targeted for.
     * </pre>
     *
     * <code>string pluginVersion = 7;</code>
     * @param value The bytes for pluginVersion to set.
     * @return This builder for chaining.
     */
    public Builder setPluginVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      pluginVersion_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.lang.Object userAgent_ = "";
    /**
     * <pre>
     * The user agent of the Grafana server that initiated the gRPC request.
     * </pre>
     *
     * <code>string userAgent = 8;</code>
     * @return The userAgent.
     */
    public java.lang.String getUserAgent() {
      java.lang.Object ref = userAgent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userAgent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The user agent of the Grafana server that initiated the gRPC request.
     * </pre>
     *
     * <code>string userAgent = 8;</code>
     * @return The bytes for userAgent.
     */
    public com.google.protobuf.ByteString
        getUserAgentBytes() {
      java.lang.Object ref = userAgent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userAgent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The user agent of the Grafana server that initiated the gRPC request.
     * </pre>
     *
     * <code>string userAgent = 8;</code>
     * @param value The userAgent to set.
     * @return This builder for chaining.
     */
    public Builder setUserAgent(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      userAgent_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user agent of the Grafana server that initiated the gRPC request.
     * </pre>
     *
     * <code>string userAgent = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserAgent() {
      userAgent_ = getDefaultInstance().getUserAgent();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user agent of the Grafana server that initiated the gRPC request.
     * </pre>
     *
     * <code>string userAgent = 8;</code>
     * @param value The bytes for userAgent to set.
     * @return This builder for chaining.
     */
    public Builder setUserAgentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      userAgent_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object apiVersion_ = "";
    /**
     * <pre>
     * The API version that initiated a request
     * </pre>
     *
     * <code>string apiVersion = 9;</code>
     * @return The apiVersion.
     */
    public java.lang.String getApiVersion() {
      java.lang.Object ref = apiVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apiVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The API version that initiated a request
     * </pre>
     *
     * <code>string apiVersion = 9;</code>
     * @return The bytes for apiVersion.
     */
    public com.google.protobuf.ByteString
        getApiVersionBytes() {
      java.lang.Object ref = apiVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apiVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The API version that initiated a request
     * </pre>
     *
     * <code>string apiVersion = 9;</code>
     * @param value The apiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setApiVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      apiVersion_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The API version that initiated a request
     * </pre>
     *
     * <code>string apiVersion = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearApiVersion() {
      apiVersion_ = getDefaultInstance().getApiVersion();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The API version that initiated a request
     * </pre>
     *
     * <code>string apiVersion = 9;</code>
     * @param value The bytes for apiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setApiVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      apiVersion_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:pluginv2.PluginContext)
  }

  // @@protoc_insertion_point(class_scope:pluginv2.PluginContext)
  private static final com.grafana.backend.PluginContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.grafana.backend.PluginContext();
  }

  public static com.grafana.backend.PluginContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PluginContext>
      PARSER = new com.google.protobuf.AbstractParser<PluginContext>() {
    @java.lang.Override
    public PluginContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PluginContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PluginContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.grafana.backend.PluginContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

