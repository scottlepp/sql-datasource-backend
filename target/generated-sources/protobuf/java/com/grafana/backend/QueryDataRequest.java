// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backend.proto
// Protobuf Java Version: 4.28.3

package com.grafana.backend;

/**
 * <pre>
 * QueryDataRequest
 * </pre>
 *
 * Protobuf type {@code pluginv2.QueryDataRequest}
 */
public final class QueryDataRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:pluginv2.QueryDataRequest)
    QueryDataRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      QueryDataRequest.class.getName());
  }
  // Use QueryDataRequest.newBuilder() to construct.
  private QueryDataRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private QueryDataRequest() {
    queries_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 2:
        return internalGetHeaders();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.grafana.backend.QueryDataRequest.class, com.grafana.backend.QueryDataRequest.Builder.class);
  }

  private int bitField0_;
  public static final int PLUGINCONTEXT_FIELD_NUMBER = 1;
  private com.grafana.backend.PluginContext pluginContext_;
  /**
   * <code>.pluginv2.PluginContext pluginContext = 1;</code>
   * @return Whether the pluginContext field is set.
   */
  @java.lang.Override
  public boolean hasPluginContext() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.pluginv2.PluginContext pluginContext = 1;</code>
   * @return The pluginContext.
   */
  @java.lang.Override
  public com.grafana.backend.PluginContext getPluginContext() {
    return pluginContext_ == null ? com.grafana.backend.PluginContext.getDefaultInstance() : pluginContext_;
  }
  /**
   * <code>.pluginv2.PluginContext pluginContext = 1;</code>
   */
  @java.lang.Override
  public com.grafana.backend.PluginContextOrBuilder getPluginContextOrBuilder() {
    return pluginContext_ == null ? com.grafana.backend.PluginContext.getDefaultInstance() : pluginContext_;
  }

  public static final int HEADERS_FIELD_NUMBER = 2;
  private static final class HeadersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_HeadersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> headers_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetHeaders() {
    if (headers_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          HeadersDefaultEntryHolder.defaultEntry);
    }
    return headers_;
  }
  public int getHeadersCount() {
    return internalGetHeaders().getMap().size();
  }
  /**
   * <pre>
   * Environment info
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2;</code>
   */
  @java.lang.Override
  public boolean containsHeaders(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetHeaders().getMap().containsKey(key);
  }
  /**
   * Use {@link #getHeadersMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
    return getHeadersMap();
  }
  /**
   * <pre>
   * Environment info
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
    return internalGetHeaders().getMap();
  }
  /**
   * <pre>
   * Environment info
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getHeadersOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHeaders().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Environment info
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2;</code>
   */
  @java.lang.Override
  public java.lang.String getHeadersOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHeaders().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int QUERIES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.grafana.backend.DataQuery> queries_;
  /**
   * <pre>
   * List of data queries
   * </pre>
   *
   * <code>repeated .pluginv2.DataQuery queries = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.grafana.backend.DataQuery> getQueriesList() {
    return queries_;
  }
  /**
   * <pre>
   * List of data queries
   * </pre>
   *
   * <code>repeated .pluginv2.DataQuery queries = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.grafana.backend.DataQueryOrBuilder> 
      getQueriesOrBuilderList() {
    return queries_;
  }
  /**
   * <pre>
   * List of data queries
   * </pre>
   *
   * <code>repeated .pluginv2.DataQuery queries = 3;</code>
   */
  @java.lang.Override
  public int getQueriesCount() {
    return queries_.size();
  }
  /**
   * <pre>
   * List of data queries
   * </pre>
   *
   * <code>repeated .pluginv2.DataQuery queries = 3;</code>
   */
  @java.lang.Override
  public com.grafana.backend.DataQuery getQueries(int index) {
    return queries_.get(index);
  }
  /**
   * <pre>
   * List of data queries
   * </pre>
   *
   * <code>repeated .pluginv2.DataQuery queries = 3;</code>
   */
  @java.lang.Override
  public com.grafana.backend.DataQueryOrBuilder getQueriesOrBuilder(
      int index) {
    return queries_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getPluginContext());
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetHeaders(),
        HeadersDefaultEntryHolder.defaultEntry,
        2);
    for (int i = 0; i < queries_.size(); i++) {
      output.writeMessage(3, queries_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPluginContext());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetHeaders().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      headers__ = HeadersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, headers__);
    }
    for (int i = 0; i < queries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, queries_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.grafana.backend.QueryDataRequest)) {
      return super.equals(obj);
    }
    com.grafana.backend.QueryDataRequest other = (com.grafana.backend.QueryDataRequest) obj;

    if (hasPluginContext() != other.hasPluginContext()) return false;
    if (hasPluginContext()) {
      if (!getPluginContext()
          .equals(other.getPluginContext())) return false;
    }
    if (!internalGetHeaders().equals(
        other.internalGetHeaders())) return false;
    if (!getQueriesList()
        .equals(other.getQueriesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPluginContext()) {
      hash = (37 * hash) + PLUGINCONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getPluginContext().hashCode();
    }
    if (!internalGetHeaders().getMap().isEmpty()) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetHeaders().hashCode();
    }
    if (getQueriesCount() > 0) {
      hash = (37 * hash) + QUERIES_FIELD_NUMBER;
      hash = (53 * hash) + getQueriesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.grafana.backend.QueryDataRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.grafana.backend.QueryDataRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.grafana.backend.QueryDataRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.grafana.backend.QueryDataRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.grafana.backend.QueryDataRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * QueryDataRequest
   * </pre>
   *
   * Protobuf type {@code pluginv2.QueryDataRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pluginv2.QueryDataRequest)
      com.grafana.backend.QueryDataRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetHeaders();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableHeaders();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.grafana.backend.QueryDataRequest.class, com.grafana.backend.QueryDataRequest.Builder.class);
    }

    // Construct using com.grafana.backend.QueryDataRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getPluginContextFieldBuilder();
        getQueriesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      pluginContext_ = null;
      if (pluginContextBuilder_ != null) {
        pluginContextBuilder_.dispose();
        pluginContextBuilder_ = null;
      }
      internalGetMutableHeaders().clear();
      if (queriesBuilder_ == null) {
        queries_ = java.util.Collections.emptyList();
      } else {
        queries_ = null;
        queriesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.grafana.backend.BackendProto.internal_static_pluginv2_QueryDataRequest_descriptor;
    }

    @java.lang.Override
    public com.grafana.backend.QueryDataRequest getDefaultInstanceForType() {
      return com.grafana.backend.QueryDataRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.grafana.backend.QueryDataRequest build() {
      com.grafana.backend.QueryDataRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.grafana.backend.QueryDataRequest buildPartial() {
      com.grafana.backend.QueryDataRequest result = new com.grafana.backend.QueryDataRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.grafana.backend.QueryDataRequest result) {
      if (queriesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          queries_ = java.util.Collections.unmodifiableList(queries_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.queries_ = queries_;
      } else {
        result.queries_ = queriesBuilder_.build();
      }
    }

    private void buildPartial0(com.grafana.backend.QueryDataRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.pluginContext_ = pluginContextBuilder_ == null
            ? pluginContext_
            : pluginContextBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.headers_ = internalGetHeaders();
        result.headers_.makeImmutable();
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.grafana.backend.QueryDataRequest) {
        return mergeFrom((com.grafana.backend.QueryDataRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.grafana.backend.QueryDataRequest other) {
      if (other == com.grafana.backend.QueryDataRequest.getDefaultInstance()) return this;
      if (other.hasPluginContext()) {
        mergePluginContext(other.getPluginContext());
      }
      internalGetMutableHeaders().mergeFrom(
          other.internalGetHeaders());
      bitField0_ |= 0x00000002;
      if (queriesBuilder_ == null) {
        if (!other.queries_.isEmpty()) {
          if (queries_.isEmpty()) {
            queries_ = other.queries_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureQueriesIsMutable();
            queries_.addAll(other.queries_);
          }
          onChanged();
        }
      } else {
        if (!other.queries_.isEmpty()) {
          if (queriesBuilder_.isEmpty()) {
            queriesBuilder_.dispose();
            queriesBuilder_ = null;
            queries_ = other.queries_;
            bitField0_ = (bitField0_ & ~0x00000004);
            queriesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getQueriesFieldBuilder() : null;
          } else {
            queriesBuilder_.addAllMessages(other.queries_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getPluginContextFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              headers__ = input.readMessage(
                  HeadersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableHeaders().getMutableMap().put(
                  headers__.getKey(), headers__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.grafana.backend.DataQuery m =
                  input.readMessage(
                      com.grafana.backend.DataQuery.parser(),
                      extensionRegistry);
              if (queriesBuilder_ == null) {
                ensureQueriesIsMutable();
                queries_.add(m);
              } else {
                queriesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.grafana.backend.PluginContext pluginContext_;
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.PluginContext, com.grafana.backend.PluginContext.Builder, com.grafana.backend.PluginContextOrBuilder> pluginContextBuilder_;
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     * @return Whether the pluginContext field is set.
     */
    public boolean hasPluginContext() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     * @return The pluginContext.
     */
    public com.grafana.backend.PluginContext getPluginContext() {
      if (pluginContextBuilder_ == null) {
        return pluginContext_ == null ? com.grafana.backend.PluginContext.getDefaultInstance() : pluginContext_;
      } else {
        return pluginContextBuilder_.getMessage();
      }
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public Builder setPluginContext(com.grafana.backend.PluginContext value) {
      if (pluginContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pluginContext_ = value;
      } else {
        pluginContextBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public Builder setPluginContext(
        com.grafana.backend.PluginContext.Builder builderForValue) {
      if (pluginContextBuilder_ == null) {
        pluginContext_ = builderForValue.build();
      } else {
        pluginContextBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public Builder mergePluginContext(com.grafana.backend.PluginContext value) {
      if (pluginContextBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          pluginContext_ != null &&
          pluginContext_ != com.grafana.backend.PluginContext.getDefaultInstance()) {
          getPluginContextBuilder().mergeFrom(value);
        } else {
          pluginContext_ = value;
        }
      } else {
        pluginContextBuilder_.mergeFrom(value);
      }
      if (pluginContext_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public Builder clearPluginContext() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pluginContext_ = null;
      if (pluginContextBuilder_ != null) {
        pluginContextBuilder_.dispose();
        pluginContextBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public com.grafana.backend.PluginContext.Builder getPluginContextBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getPluginContextFieldBuilder().getBuilder();
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    public com.grafana.backend.PluginContextOrBuilder getPluginContextOrBuilder() {
      if (pluginContextBuilder_ != null) {
        return pluginContextBuilder_.getMessageOrBuilder();
      } else {
        return pluginContext_ == null ?
            com.grafana.backend.PluginContext.getDefaultInstance() : pluginContext_;
      }
    }
    /**
     * <code>.pluginv2.PluginContext pluginContext = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.grafana.backend.PluginContext, com.grafana.backend.PluginContext.Builder, com.grafana.backend.PluginContextOrBuilder> 
        getPluginContextFieldBuilder() {
      if (pluginContextBuilder_ == null) {
        pluginContextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.grafana.backend.PluginContext, com.grafana.backend.PluginContext.Builder, com.grafana.backend.PluginContextOrBuilder>(
                getPluginContext(),
                getParentForChildren(),
                isClean());
        pluginContext_ = null;
      }
      return pluginContextBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> headers_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetHeaders() {
      if (headers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HeadersDefaultEntryHolder.defaultEntry);
      }
      return headers_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableHeaders() {
      if (headers_ == null) {
        headers_ = com.google.protobuf.MapField.newMapField(
            HeadersDefaultEntryHolder.defaultEntry);
      }
      if (!headers_.isMutable()) {
        headers_ = headers_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return headers_;
    }
    public int getHeadersCount() {
      return internalGetHeaders().getMap().size();
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    @java.lang.Override
    public boolean containsHeaders(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetHeaders().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHeadersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getHeaders() {
      return getHeadersMap();
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getHeadersMap() {
      return internalGetHeaders().getMap();
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getHeadersOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHeaders().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getHeadersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHeaders().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearHeaders() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableHeaders().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    public Builder removeHeaders(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableHeaders().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableHeaders() {
      bitField0_ |= 0x00000002;
      return internalGetMutableHeaders().getMutableMap();
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    public Builder putHeaders(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableHeaders().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * Environment info
     * </pre>
     *
     * <code>map&lt;string, string&gt; headers = 2;</code>
     */
    public Builder putAllHeaders(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableHeaders().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }

    private java.util.List<com.grafana.backend.DataQuery> queries_ =
      java.util.Collections.emptyList();
    private void ensureQueriesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        queries_ = new java.util.ArrayList<com.grafana.backend.DataQuery>(queries_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.grafana.backend.DataQuery, com.grafana.backend.DataQuery.Builder, com.grafana.backend.DataQueryOrBuilder> queriesBuilder_;

    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public java.util.List<com.grafana.backend.DataQuery> getQueriesList() {
      if (queriesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(queries_);
      } else {
        return queriesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public int getQueriesCount() {
      if (queriesBuilder_ == null) {
        return queries_.size();
      } else {
        return queriesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public com.grafana.backend.DataQuery getQueries(int index) {
      if (queriesBuilder_ == null) {
        return queries_.get(index);
      } else {
        return queriesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder setQueries(
        int index, com.grafana.backend.DataQuery value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.set(index, value);
        onChanged();
      } else {
        queriesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder setQueries(
        int index, com.grafana.backend.DataQuery.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.set(index, builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder addQueries(com.grafana.backend.DataQuery value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.add(value);
        onChanged();
      } else {
        queriesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder addQueries(
        int index, com.grafana.backend.DataQuery value) {
      if (queriesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQueriesIsMutable();
        queries_.add(index, value);
        onChanged();
      } else {
        queriesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder addQueries(
        com.grafana.backend.DataQuery.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.add(builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder addQueries(
        int index, com.grafana.backend.DataQuery.Builder builderForValue) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.add(index, builderForValue.build());
        onChanged();
      } else {
        queriesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder addAllQueries(
        java.lang.Iterable<? extends com.grafana.backend.DataQuery> values) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, queries_);
        onChanged();
      } else {
        queriesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder clearQueries() {
      if (queriesBuilder_ == null) {
        queries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        queriesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public Builder removeQueries(int index) {
      if (queriesBuilder_ == null) {
        ensureQueriesIsMutable();
        queries_.remove(index);
        onChanged();
      } else {
        queriesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public com.grafana.backend.DataQuery.Builder getQueriesBuilder(
        int index) {
      return getQueriesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public com.grafana.backend.DataQueryOrBuilder getQueriesOrBuilder(
        int index) {
      if (queriesBuilder_ == null) {
        return queries_.get(index);  } else {
        return queriesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public java.util.List<? extends com.grafana.backend.DataQueryOrBuilder> 
         getQueriesOrBuilderList() {
      if (queriesBuilder_ != null) {
        return queriesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(queries_);
      }
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public com.grafana.backend.DataQuery.Builder addQueriesBuilder() {
      return getQueriesFieldBuilder().addBuilder(
          com.grafana.backend.DataQuery.getDefaultInstance());
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public com.grafana.backend.DataQuery.Builder addQueriesBuilder(
        int index) {
      return getQueriesFieldBuilder().addBuilder(
          index, com.grafana.backend.DataQuery.getDefaultInstance());
    }
    /**
     * <pre>
     * List of data queries
     * </pre>
     *
     * <code>repeated .pluginv2.DataQuery queries = 3;</code>
     */
    public java.util.List<com.grafana.backend.DataQuery.Builder> 
         getQueriesBuilderList() {
      return getQueriesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.grafana.backend.DataQuery, com.grafana.backend.DataQuery.Builder, com.grafana.backend.DataQueryOrBuilder> 
        getQueriesFieldBuilder() {
      if (queriesBuilder_ == null) {
        queriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.grafana.backend.DataQuery, com.grafana.backend.DataQuery.Builder, com.grafana.backend.DataQueryOrBuilder>(
                queries_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        queries_ = null;
      }
      return queriesBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:pluginv2.QueryDataRequest)
  }

  // @@protoc_insertion_point(class_scope:pluginv2.QueryDataRequest)
  private static final com.grafana.backend.QueryDataRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.grafana.backend.QueryDataRequest();
  }

  public static com.grafana.backend.QueryDataRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryDataRequest>
      PARSER = new com.google.protobuf.AbstractParser<QueryDataRequest>() {
    @java.lang.Override
    public QueryDataRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<QueryDataRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryDataRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.grafana.backend.QueryDataRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

